pipeline {
    agent any

    environment {
        // Set these in Jenkins credentials or adjust as needed
        CATALOGUE_FILE = 'software_catalogue.Mxx'
        LLT_PATH = 'C:\\Program Files\\Ingenico\\LoadAndLaunchTool\\LLT.exe'
    }

    stages {
        // STAGE 1: Simulate COM Port Detection
        stage('Detect COM Port') {
            steps {
                script {
                    echo "🔍 Simulating COM port detection for Ingenico Move/3500..."
                    
                    // In real usage, replace with actual COM port detection logic
                    def comPorts = ['COM1', 'COM3', 'COM4', 'COM5']
                    env.DETECTED_COM_PORT = comPorts[new Random().nextInt(comPorts.size())]
                    
                    echo "✅ Terminal detected on: ${env.DETECTED_COM_PORT}"
                }
            }
        }

        // STAGE 2: Extract .upd from Catalogue (Simulated)
        stage('Prepare Package') {
            steps {
                script {
                    echo "📦 Processing ${env.CATALOGUE_FILE}..."
                    
                    // Simulate .upd extraction
                    def updFile = "ingenico_package_${currentBuild.number}.upd"
                    bat """
                        echo Extracting .upd from catalogue... > log.txt
                        echo SimulatedUPDContent > "${updFile}"
                    """
                    env.UPD_FILE = updFile
                    
                    echo "✅ Created simulated package: ${env.UPD_FILE}"
                }
            }
        }

        // STAGE 3: Simulate Deployment via LLT
        stage('Deploy to Terminal') {
            steps {
                script {
                    echo "🚀 Simulating deployment via LLT..."
                    bat """
                        echo "Would execute: ${env.LLT_PATH} /port:${env.DETECTED_COM_PORT} /file:${env.UPD_FILE} /silent"
                        echo Deployment successful! > result.txt
                    """
                }
            }
        }
    }

    post {
        always {
            echo "🏁 Pipeline completed - Result: ${currentBuild.currentResult}"
            archiveArtifacts artifacts: '*.txt', allowEmptyArchive: true  // Save logs
        }
        success {
            echo "🎉 Successfully simulated terminal update!"
        }
        failure {
            echo "❌ Simulation failed - check logs"
        }
    }
}
