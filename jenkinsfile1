pipeline {
    agent any

    environment {
        LLT_PATH = 'C:\\Program Files\\Ingenico\\LoadAndLaunchTool\\LLT.exe'
        CATALOGUE_FILE = 'software_catalogue.Mxx'
    }

    stages {
        // STAGE 1: COM PORT DETECTION
        stage('Detect COM Port') {
            steps {
                script {
                    def comPorts = ['COM1', 'COM3', 'COM4', 'COM5']
                    env.DETECTED_COM_PORT = comPorts[new Random().nextInt(comPorts.size())]
                    bat """
                        echo [DEBUG] Simulated COM port detection > com_detection.log
                        echo Found port: ${env.DETECTED_COM_PORT} >> com_detection.log
                    """
                }
            }
        }

        // STAGE 2: PACKAGE PREPARATION (FIXED)
        stage('Prepare Package') {
            steps {
                script {
                    env.UPD_FILE = "update_${currentBuild.number}.upd"
                    bat """
                        echo [INFO] Processing %CATALOGUE_FILE% > prep.log
                        echo Creating package: %UPD_FILE% >> prep.log
                        echo Cost: \$5 (simulated) >> prep.log
                        echo Simulated content > "%UPD_FILE%"
                    """
                }
            }
        }

        // STAGE 3: DEPLOYMENT
        stage('Deploy') {
            steps {
                bat """
                    echo [DEPLOY] Starting deployment > deploy.log
                    echo Would execute: "%LLT_PATH%" /port:%DETECTED_COM_PORT% /file:"%UPD_FILE%" >> deploy.log
                    echo Status: Success >> deploy.log
                """
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '*.log,*.upd,status.txt', allowEmptyArchive: true
            echo "Pipeline completed. Artifacts archived."
        }
        success {
            bat 'echo PIPELINE SUCCEEDED > status.txt'
        }
        failure {
            bat 'echo PIPELINE FAILED > status.txt'
        }
    }
}
